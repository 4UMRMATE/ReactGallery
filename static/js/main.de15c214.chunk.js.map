{"version":3,"sources":["components/NewImage.js","actions/index.js","components/Slider.js","components/Comment.js","components/CommentInput.js","components/CommentsBox.js","components/Panel.js","components/Gallery.js","App.js","reportWebVitals.js","reducers/activeIndex.js","reducers/pictures.js","reducers/comments.js","reducers/commenting.js","reducers/isFetching.js","reducers/index.js","index.js"],"names":["NewImage","useState","url","setUrl","className","id","type","onChange","e","target","value","placeholder","autoComplete","onClick","axios","post","then","res","console","log","addNewImage","assignIndex","state","payload","fetching","Slider","index","useSelector","activeIndex","pictures","dispatch","useDispatch","fetchPictures","a","get","data","error","swipe","direction","length","useEffect","map","picture","idx","src","alt","Comment","props","avatar","width","height","username","text","upvotes","CommentInput","author","setAuthor","setAvatar","setText","isFetching","sendComment","maxLength","onKeyPress","key","preventDefault","picture_id","CommentsBox","comments","commenting","fetchComments","_id","comment","Panel","commentsBox","setCommentsBox","Gallery","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","allReducers","combineReducers","require","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de15c214.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nconst addNewImage = (url) => {\r\n  axios\r\n    .post(\r\n      `https://ms-gallery-api.herokuapp.com/api/gallery/new-picture/?url=${url}`\r\n    )\r\n    .then((res) => console.log(res));\r\n};\r\n\r\nexport default function NewImage() {\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setUrl(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"NewImage\">\r\n      <h1 id=\"title\">Add Your Own Image</h1>\r\n      <div className=\"url-input\">\r\n        <form>\r\n          <input\r\n            id=\"img-url\"\r\n            type=\"url\"\r\n            onChange={handleChange}\r\n            placeholder=\"https://\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <button id=\"submit\" onClick={() => addNewImage(url)}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const assignPictures = (state) => {\r\n  return {\r\n    type: \"ASSIGN_PICTURES\",\r\n    payload: state,\r\n  };\r\n};\r\n\r\nexport const assignComments = (state) => {\r\n  return {\r\n    type: \"ASSIGN_COMMENTS\",\r\n    payload: state,\r\n  };\r\n};\r\n\r\nexport const assignIndex = (state) => {\r\n  return {\r\n    type: \"ASSIGN_INDEX\",\r\n    payload: state,\r\n  };\r\n};\r\n\r\nexport const commenting = (state) => {\r\n  return {\r\n    type: \"COMMENTING\",\r\n  };\r\n};\r\n\r\nexport const fetching = (state) => {\r\n  return {\r\n    type: \"FETCHING\",\r\n    payload: state,\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { assignPictures, assignIndex } from \"../actions\";\r\n\r\nexport default function Slider() {\r\n  // const [pictures, setPictures] = useState([\"a\"]);\r\n  // const [index, setIndex] = useState(0);\r\n  const index = useSelector((state) => state.activeIndex);\r\n  const pictures = useSelector((state) => state.pictures);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchPictures = async () => {\r\n    try {\r\n      await axios\r\n        .get(\"https://ms-gallery-api.herokuapp.com/api/gallery/pictures\")\r\n        .then((res) => {\r\n          // setPictures(res.data);\r\n          dispatch(assignPictures(res.data));\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const swipe = (direction) => {\r\n    switch (direction) {\r\n      case \"left\":\r\n        index === 0\r\n          ? dispatch(assignIndex(pictures.length - 1))\r\n          : dispatch(assignIndex(index - 1));\r\n        break;\r\n      case \"right\":\r\n        index === pictures.length - 1\r\n          ? dispatch(assignIndex(0))\r\n          : dispatch(assignIndex(index + 1));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPictures();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Slider\">\r\n      <button className=\"slider-arrows\" onClick={() => swipe(\"left\")}>\r\n        &lArr;\r\n      </button>\r\n      <div className=\"Picture\">\r\n        {pictures.map((picture, idx) => (\r\n          <img\r\n            className={`image ${index === idx ? \"active\" : \"\"}`}\r\n            key={idx}\r\n            src={picture.url}\r\n            alt=\"\"\r\n          ></img>\r\n        ))}\r\n      </div>\r\n      <button className=\"slider-arrows\" onClick={() => swipe(\"right\")}>\r\n        &rArr;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","export default function Comment(props) {\r\n  return (\r\n    <div className=\"Comment\">\r\n      <div className=\"user\">\r\n        <img\r\n          id=\"avatar\"\r\n          src={props.avatar}\r\n          alt=\"avatar\"\r\n          width=\"50px\"\r\n          height=\"50px\"\r\n        ></img>\r\n        <h5 id=\"username\">{props.username}</h5>\r\n      </div>\r\n      <p id=\"text\">{props.text}</p>\r\n      <div className=\"upvotes\">\r\n        <button id=\"upvote\">+</button>\r\n        <p>{props.upvotes}</p>\r\n        <button id=\"downvote\">-</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// import Comment from \"./Comment\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { commenting, fetching } from \"../actions\";\r\n\r\nexport default function CommentInput(props) {\r\n  const [author, setAuthor] = useState(\"Guest\");\r\n  const [avatar, setAvatar] = useState(\r\n    \"https://cdn4.iconfinder.com/data/icons/gray-business-2/512/xxx006-512.png\"\r\n  );\r\n  const [text, setText] = useState(\"\");\r\n  const isFetching = useSelector((state) => state.isFetching);\r\n  const dispatch = useDispatch();\r\n\r\n  const sendComment = async (id, author, avatar, text) => {\r\n    try {\r\n      dispatch(fetching(true));\r\n      await axios\r\n        .post(\r\n          `https://ms-gallery-api.herokuapp.com/api/gallery/add-comment/?picture_id=${id}&author=${author}&avatar=${avatar}&text=${text}`\r\n        )\r\n        .then((res) => {\r\n          dispatch(fetching(false));\r\n          console.log(\"New Comment!\");\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (text) {\r\n        sendComment(props.picture_id, author, avatar, text);\r\n        dispatch(commenting());\r\n        setText(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"CommentInput\">\r\n      <div className=\"user-info\">\r\n        <input\r\n          id=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n        />\r\n        <input\r\n          id=\"avatar\"\r\n          type=\"url\"\r\n          placeholder=\"avatar url\"\r\n          onChange={(e) => setAvatar(e.target.value)}\r\n        />\r\n      </div>\r\n      <input\r\n        id=\"comment-input\"\r\n        type=\"text\"\r\n        placeholder=\"Write a public comment...\"\r\n        autoComplete=\"off\"\r\n        maxLength=\"120\"\r\n        onChange={(e) => setText(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        value={text || \"\"}\r\n      />\r\n      {isFetching ? <i className=\"loader\"></i> : \"\"}\r\n    </div>\r\n  );\r\n}\r\n","import Comment from \"./Comment\";\r\nimport CommentInput from \"./CommentInput\";\r\nimport axios from \"axios\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { assignComments } from \"../actions\";\r\n\r\nexport default function CommentsBox() {\r\n  const comments = useSelector((state) => state.comments);\r\n  const commenting = useSelector((state) => state.commenting);\r\n  const pictures = useSelector((state) => state.pictures);\r\n  const index = useSelector((state) => state.activeIndex);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchComments = async (picture_id) => {\r\n    try {\r\n      await axios\r\n        .get(\r\n          `https://ms-gallery-api.herokuapp.com/api/gallery/comment/?picture_id=${picture_id}`\r\n        )\r\n        .then((res) => {\r\n          dispatch(assignComments(res.data.comments));\r\n        });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments(pictures[index]._id);\r\n  }, [index, commenting]);\r\n\r\n  return (\r\n    <div className=\"CommentsBox\">\r\n      <CommentInput picture_id={pictures[index]._id} />\r\n      {comments.map((comment, idx) => (\r\n        <Comment\r\n          key={idx}\r\n          username={comment.author}\r\n          avatar={comment.avatar}\r\n          text={comment.text}\r\n          upvotes={comment.upvotes}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import CommentsBox from \"./CommentsBox\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Panel() {\r\n  const [commentsBox, setCommentsBox] = useState(false);\r\n\r\n  const toogleComments = () => {\r\n    setCommentsBox(!commentsBox);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Panel\">\r\n      <div className=\"buttons\">\r\n        <button>Like</button>\r\n        <button onClick={toogleComments}>Comments</button>\r\n      </div>\r\n      {commentsBox ? <CommentsBox /> : \"\"}\r\n    </div>\r\n  );\r\n}\r\n","import Slider from \"./Slider\";\r\nimport Panel from \"./Panel\";\r\n\r\nexport default function Gallery() {\r\n  return (\r\n    <div className=\"Gallery\">\r\n      <Slider />\r\n      <Panel />\r\n    </div>\r\n  );\r\n}\r\n","import \"./assets/css/App.scss\";\n\nimport NewImage from \"./components/NewImage\";\nimport Gallery from \"./components/Gallery\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NewImage />\n      <Gallery />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const activeIndex = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case \"ASSIGN_INDEX\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activeIndex;\r\n","const pictures = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ASSIGN_PICTURES\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pictures;\r\n","const comments = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ASSIGN_COMMENTS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default comments;\r\n","const commenting = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"COMMENTING\":\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport default commenting;\r\n","const fetching = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"FETCHING\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default fetching;\r\n","import activeIndex from \"./activeIndex\";\r\nimport pictures from \"./pictures\";\r\nimport comments from \"./comments\";\r\nimport commenting from \"./commenting\";\r\nimport isFetching from \"./isFetching\";\r\nconst { combineReducers } = require(\"redux\");\r\n\r\nconst allReducers = combineReducers({\r\n  activeIndex: activeIndex,\r\n  pictures: pictures,\r\n  comments: comments,\r\n  commenting: commenting,\r\n  isFetching: isFetching,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport allReducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}